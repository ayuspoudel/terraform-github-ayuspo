name: Create GitHub Repo Secrets

on:
  workflow_dispatch:
    inputs:
      repository_name:
        description: "Select target repository"
        required: true
        type: choice
        options:
          - ansible-windows-bootstrap
          - ansible-playbooks-common-devops
          - legacy-cpp-library-adt-dsa
          - legacy-cpp-polish-reverse-polish-converter
          - legacy-cpp-sorting-techniques
          - legacy-java-learning-problems
          - legacy-c-language-projects
          - webdev-clone-amazon
          - webdev-tool-microservices-blog
          - webdev-ui-dropdown-menu
          - webdev-app-flat-guru-usf
          - webdev-app-green-rise-nepal
          - webdev-learn-js-journey
          - webdev-portfolio-main
          - webdev-learn-js-projects
          - webdev-app-weather
          - dmz
          - homebrew-dmz
          - aws-service-notes
          - aws-cli-automation-scripts
          - aws-3tier-web-architecture
          - aws-cloud-native-microservices-deployment
          - aws-lambda-serverless-jira-github-sync
          - aws-iac-terraform-monorepo
          - aws-mongodb-ha-replicaset-cluster
          - dynatrace-terraform-observability-dashboards
          - Terraform-best-methods
          - terraform-github-ayuspo
          - Terraform-Automation-Projects
          - ayuspoudel-resume
          - ayuspoudel
          - ops-shell-scripting-automation
          - ops-cicd-pipeline-jenkins-argocd-k8s
          - ops-kubernetes-demo-application
          - ops-python-infra-utilities
      secrets_json:
        description: "JSON secrets {KEY: VALUE, ...}"
        required: true
        type: string

jobs:
  apply-secrets:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug Creator
        run: 'echo "GitHub Actor: ${{ github.actor }}"'

      - name: Resolve folder and state from CSV
        id: lookup
        run: |
          REPO="${{ github.event.inputs.repository_name }}"
          IFS=',' read -r FOLDER_NAME REPO_NAME STATE_NAME <<< $(awk -F, -v repo="$REPO" 'NR > 1 && $2 == repo { print $1 "," $2 "," $3 }' .artifacts/repos.csv)
          echo "folder_name=$FOLDER_NAME" >> $GITHUB_OUTPUT
          echo "state_name=$STATE_NAME" >> $GITHUB_OUTPUT

      - name: Decode secrets_json and write secrets.yaml
        run: |
          mkdir -p "${{ steps.lookup.outputs.folder_name }}"
          echo '${{ github.event.inputs.secrets_json }}' | jq . | yq -P e - > "${{ steps.lookup.outputs.folder_name }}/secrets.yaml"
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      - name: Install Terragrunt
        run: |
          curl -L https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64 -o terragrunt
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/terragrunt
  
      - name: Run Terragrunt to apply secrets
        run: |
          cd "${{ steps.lookup.outputs.folder_name }}"
          terragrunt apply -auto-approve


      - name: Cleanup
        run: rm -f "${{ steps.lookup.outputs.folder_name }}/secrets.yaml"
